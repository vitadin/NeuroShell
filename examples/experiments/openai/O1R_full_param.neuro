%% OpenAI o1 Reasoning Full Parameter Test
%% Purpose: Test O1R model with all available parameters from o1-openai.yaml
%% This validates that all YAML parameter definitions are correctly implemented

\set _style dark1

\echo === OpenAI o1 Reasoning Full Parameter Validation Test ===
\echo Testing O1R with all parameters: reasoning_effort, reasoning_summary, max_output_tokens
\echo

%% ============================================================================
%% API SETUP
%% ============================================================================
\echo Phase 1: Activating OpenAI API key from environment...

%% Load and activate the OpenAI API key from local environment
\llm-api-load[provider=openai]
\llm-api-activate[provider=openai, key=local.OPENAI_API_KEY]

%% Verify API key is activated
\llm-api-load[provider=openai]
\echo

%% ============================================================================
%% O1R FULL PARAMETER TEST
%% ============================================================================
\echo Phase 2: Testing O1R (o1 Reasoning) with full parameter set...
\openai-model-new[catalog_id="O1R", reasoning_effort="medium", reasoning_summary="auto", max_output_tokens="35000"] o1-reasoning-full-params-model

%% Check that the O1R model was created successfully
\echo Step 2.1: Check O1R model creation with full parameters...
\model-status

%% Activate the O1R model for use
\echo Step 2.2: Activate O1R model for use...
\model-activate o1-reasoning-full-params-model

%% Verify the O1R model is active
\echo Step 2.3: Verify O1R model is active...
\echo Active model: ${#active_model_name}
\echo Provider: ${#active_model_provider}

%% O1R Progressive Session Context Test
\echo Step 2.4: Testing O1R session context with progressive conversation...
\echo This tests whether o1 Reasoning receives and uses the full session context.
\echo

%% Message 1: Setup the scenario
\echo O1R Message 1: Setting up a math problem...
\send I'm thinking of two numbers. Let's call them A and B. A is 21 and B is 3.

\echo-json ${_debug_network}

%% Message 2: Add constraint (requires context)
\echo O1R Message 2: Building on the numbers from Message 1...
\send What is A divided by B?

%% Message 3: Build on previous answer (requires context from both messages)
\echo O1R Message 3: Using the quotient we just calculated...
\send Now subtract 2 from that result. What do you get?

%% Message 4: Memory test (tests session memory)
\echo O1R Message 4: Testing memory of original values...
\send What were the original values of A and B that I mentioned at the start?

\echo-json ${_debug_network}

%% O1R test complete
\echo Step 2.5: O1R session context test complete. Checking session...
\session-list
\session-show

%% O1R cleanup
\echo Step 2.6: Cleanup - deleting the O1R test model...
\model-delete o1-reasoning-full-params-model
\model-status

\echo === o1 Reasoning Full Parameter Test Complete ===
\echo All parameters successfully validated: reasoning_effort, reasoning_summary, max_output_tokens
