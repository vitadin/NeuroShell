%% Test \get-env command with dual syntax support and neuro variable creation
%% This test demonstrates both bracket and space syntax, plus the automatic creation of #os.VAR variables

%% Step 1: Set up test environment variables using \set-env
\echo ═══ Setting Up Test Environment Variables ═══
\set-env[MY_TEST_VAR=hello_world]
\set-env[PATH_TEST=/test/path/bin]

%% Step 2: Test bracket syntax - get environment variable and create #os.VAR
\echo ═══ Testing Bracket Syntax ═══
\get-env[MY_TEST_VAR]

%% Step 3: Test space syntax - get environment variable and create #os.VAR  
\echo ═══ Testing Space Syntax ═══
\get-env PATH_TEST

%% Step 4: Verify that neuro variables were automatically created
\echo ═══ Verifying Neuro Variables Were Created ═══
\get #os.MY_TEST_VAR
\get #os.PATH_TEST

%% Step 5: Test with non-existent environment variable
\echo ═══ Testing Non-Existent Environment Variable ═══
\get-env[NONEXISTENT_VAR]
\get #os.NONEXISTENT_VAR

%% Step 6: Show all variables to confirm the pattern
\echo ═══ All Variables (showing #os.* pattern) ═══
\vars[type=system, pattern="#os\..*"]