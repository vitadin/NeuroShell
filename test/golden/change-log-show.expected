NeuroShell Change Log (2 entries):

[CL2] Session Import/Export, Model Parameter Validation, and Enhanced OpenAI Integration
  Version: 0.2.2+573
  Date: 2025-07-31
  Type: Feature
  Description: Added comprehensive session import/export system supporting JSON format with full data preservation. Implemented model parameter validation service with detailed parameter cards for all models. Enhanced OpenAI integration with O4 Mini chat/reasoning modes, streaming support, and improved client management. Upgraded neurotest framework with enhanced testing capabilities and new experiment scripts. Improved help command organization by removing quick examples and adding better categorization.
  Impact: Users can now backup/restore entire chat sessions, view detailed model parameters before creation, utilize OpenAI O4 Mini with both chat and reasoning modes, and benefit from more robust testing infrastructure. The help system is cleaner and more organized. Model management includes comprehensive parameter validation and provider catalog ID display.
  Files: internal/commands/session/json_export.go, internal/commands/session/json_import.go, internal/commands/session/export.go, internal/commands/session/import.go, internal/services/chat_session_service.go, internal/services/parameter_validator_service.go, internal/commands/model/openai_model_new.go, internal/commands/llm/client_activate.go, internal/commands/llm/api_load.go, internal/commands/builtin/help.go, internal/data/embedded/models/o4-mini-*.yaml, cmd/neurotest/*, examples/experiments/openai/*, test/golden/session-*export*, test/golden/session-*import*

[CL1] Major Architecture Overhaul and Gemini Integration
  Version: 0.2.0+550
  Date: 2025-07-30
  Type: Feature
  Description: Comprehensive architectural restructuring with full Google Gemini integration, enhanced provider system, version management, and extensive testing infrastructure. Transformed NeuroShell from basic shell to comprehensive LLM interaction platform with support for OpenAI, Anthropic, and Google Gemini providers.
  Impact: Users now have access to Google Gemini models with thinking mode, streaming capabilities, provider-specific commands, semantic versioning, and robust model management. The system is more maintainable with better command organization and extensive test coverage.
  Files: internal/commands/llm/*, internal/commands/model/*, internal/commands/builtin/version.go, internal/services/*_client.go, internal/data/embedded/models/gemini-*.yaml, internal/data/embedded/models/o3*.yaml, internal/version/version.go, internal/context/context.go, test/golden/*.neuro