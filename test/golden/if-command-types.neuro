%% Test \if command with different types of commands
%% Verifies that \if properly queues various command types
\set[_echo_command="true"]

%% Test with basic builtin commands
\if[condition=true] \set[basic_test="passed"]
\get[basic_test]

\if[condition=true] \get[basic_test]

%% Test with echo command and various options
\if[condition=true] \echo "Simple echo test"
\if[condition=true] \echo[style=bold] "Styled echo test"

%% Test with commands that have complex bracket syntax
\if[condition=true] \set[complex="value with spaces"]
\if[condition=true] \get[complex]

%% Test with multiple parameters
\if[condition=true] \set[param1="value1", param2="value2"]
\get[param1]
\get[param2]

%% Test with commands containing special characters
\if[condition=true] \set[special="Hello, World! @#$%"]
\get[special]

%% Test with commands containing quotes
\if[condition=true] \set[quoted="She said \"Hello\""]
\get[quoted]

%% Test with very long commands
\if[condition=true] \set[long_value="This is a very long string that contains many words and should test the command queuing with longer content to ensure everything works correctly"]
\get[long_value]

%% Test with commands that themselves use variable interpolation
\set[target_var="destination"]
\set[value_to_set="interpolated"]
\if[condition=true] \set[${target_var}="${value_to_set}"]
\get[destination]

%% Test sequential if commands
\if[condition=true] \set[seq1="first"]
\if[condition=true] \set[seq2="second"] 
\if[condition=true] \set[seq3="third"]
\get[seq1]
\get[seq2]
\get[seq3]

%% Test if commands with different condition types
\set[condition_var="yes"]
\if[condition=${condition_var}] \set[conditional_result="success"]
\if[condition=1] \set[numeric_result="success"]
\if[condition=enabled] \set[word_result="success"]
\get[conditional_result]
\get[numeric_result] 
\get[word_result]

%% Test with commands that might fail (but don't in this case)
\if[condition=true] \set[valid_var="this_should_work"]
\get[valid_var]

%% Test nested bracket scenarios
\if[condition=true] \echo[style=red] "Color: ${condition_var}"

%% Test commands with various data types
\if[condition=true] \set[string_val="text"]
\if[condition=true] \set[number_val="42"]
\if[condition=true] \set[boolean_val="true"]
\get[string_val]
\get[number_val]
\get[boolean_val]

%% Test that false conditions don't execute any of these commands
\if[condition=false] \set[should_not_exist1="value"]
\if[condition=false] \echo "This should not print"
\if[condition=false] \get[basic_test]
\get[should_not_exist1]