%% Complex test scenarios for \try command with interpolation and chaining
%% This test verifies \try works with variable interpolation and complex commands

%% Set up test variables
\set[test_file=/tmp/nonexistent_test_file]
\set[test_var=hello]

%% Test try with interpolation in bash command
\try \bash echo "Testing ${test_var}"
\get[_status]
\get[_output]

%% Test try with interpolated failing command
\try \bash cat ${test_file}
\get[_status]
\get[_error]

%% Test try with set command using interpolation
\set[base_value=world]
\try \set[combined=${test_var}_${base_value}]
\get[_status]
\get[combined]

%% Test try with complex bash command (pipes)
\try \bash echo "test" | grep "test"
\get[_status]
\get[_output]

%% Test try with failing complex bash command
\try \bash echo "test" | grep "notfound" | wc -l
\get[_status]

%% Test try preserves variables across failures
\set[before_try=preserved]
\try \set[_invalid=fail]
\get[before_try]
\get[_status]

%% Test multiple consecutive try commands
\try \set[seq1=first]
\try \set[seq2=second] 
\try \bash echo "sequence test"
\get[seq1]
\get[seq2]
\get[_status]