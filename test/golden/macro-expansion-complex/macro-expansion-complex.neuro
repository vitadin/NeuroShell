%% Complex nested macro expansion test
\set[_echo_command="true"]

%% Test 1: Command with variable parameters
\set[cmd="\echo"]
\set[prefix="Hello"]
\set[suffix="World"]
\set[message="${prefix}, ${suffix}!"]
${cmd} Message: ${message}

%% Test 2: Multi-level variable expansion in commands
\set[base="\echo"]
\set[echocmd="${base}"]
${echocmd} Using echo command

%% Test 3: Set command through macro
\set[setcmd="\set"]
${setcmd}[result="Complex result"]
\get[result]

%% Test 4: Command expansion with interpolated options
\set[style="red"]
\set[target="styled_output"]
\set[styled_echo="\echo[style=${style},to=${target}]"]
${styled_echo} This should be styled
\get[styled_output]

%% Test 5: Dynamic command building
\set[command_name="\echo"]
\set[option_raw="raw=true"]
\set[option_to="to=dynamic_result"]
\set[full_command="${command_name}[${option_raw},${option_to}]"]
${full_command} Dynamic command building
\get[dynamic_result]

%% Test 6: Chain of set commands
\set[set_intermediate="\set[temp=intermediate]"]
${set_intermediate}
\get[temp]

%% Test 7: Conditional-like command selection
\set[debug_cmd="\echo[style=yellow]"]
\set[current_cmd="${debug_cmd}"]
${current_cmd} Debug mode active

%% Test 8: Template-like command construction
\set[target_var="template_result"]
\set[template_cmd="\echo[to=${target_var}]"]
${template_cmd} Template expansion works
\get[template_result]